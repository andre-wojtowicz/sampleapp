name: Create and publish a Docker image

on:
  workflow_dispatch:
    inputs:
      branchname:
        description: 'Branch name'
        required: true
  push:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout app repository
        uses: actions/checkout@v3
        
      - name: Write app build info
        run: |
          echo -n "app: " > app/.build_data.yml
          echo $(git branch --show-current)-$(git rev-parse --short HEAD)-$(git log -1 --format=%cd --date=format:'%Y.%m.%d-%T') >> app/.build_data.yml
          cat app/.build_data.yml
          
      - name: Checkout data repository
        uses: actions/checkout@v3
        with:
          repository: andre-wojtowicz/sampleapp-data
          path: tmp
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.inputs.branchname || github.head_ref || github.ref_name }}
          
      - name: Copy data
        run: |
          cp -r tmp/* app/data/
          
      - name: Write data build info
        run: |
          cd tmp
          echo -n "data: " >> ../app/.build_data.yml
          echo $(git branch --show-current)-$(git rev-parse --short HEAD)-$(git log -1 --format=%cd --date=format:'%Y.%m.%d-%T') >> ../app/.build_data.yml
          cd ..
          cat app/.build_data.yml
          
      - name: Remove data
        run: |
          rm -rf tmp/

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: get release version
        run: |
          if [ ${{ github.event_name }} == 'push' ]; then
            echo "::set-output name=package_tag::${{ steps.meta.outputs.tags }}"
          elif [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo "::set-output name=package_tag::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.branchname }}"
          else
            echo "Unrecognized github.event_name"
            exit 1
          fi
        id: var_tag
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.var_tag.outputs.package_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Invoke deployment hook
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{ "package_tag": "${{ steps.var_tag.outputs.package_tag }}" }'
